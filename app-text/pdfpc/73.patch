From 7078a7415eb1492f8248784ef69eacef3e959370 Mon Sep 17 00:00:00 2001
From: Andreas Bilke <abilke@cosy.sbg.ac.at>
Date: Wed, 22 Jan 2014 09:45:15 +0100
Subject: [PATCH 1/2] makes the compiler more happy

---
 src/classes/action/movie.vala      | 9 +++++++--
 src/classes/configFileReader.vala  | 4 ++--
 src/classes/timer_label.vala       | 2 +-
 src/classes/window/fullscreen.vala | 2 +-
 4 files changed, 11 insertions(+), 6 deletions(-)

diff --git a/src/classes/action/movie.vala b/src/classes/action/movie.vala
index ac907a9..ad7ae7e 100644
--- a/src/classes/action/movie.vala
+++ b/src/classes/action/movie.vala
@@ -180,7 +180,7 @@ namespace pdfpc {
                     string tmp_fn;
                     int fh;
                     try {
-                        fh = FileUtils.open_tmp(null, out tmp_fn);
+                        fh = FileUtils.open_tmp("pdfpc-XXXXXX", out tmp_fn);
                     } catch (FileError e) {
                         warning("Could not create temp file: %s", e.message);
                         return null;
@@ -283,7 +283,12 @@ namespace pdfpc {
          * Utility function for converting filenames to uris.
          */
         public string filename_to_uri(string file, string pdf_url) {
-            var uriRE = new Regex("^[a-z]*://");
+            Regex uriRE = null;
+            try {
+                uriRE = new Regex("^[a-z]*://");
+            } catch(RegexError error) {
+               // can't happen
+            }
             if (uriRE.match(file))
                 return file;
             if (GLib.Path.is_absolute(file))
diff --git a/src/classes/configFileReader.vala b/src/classes/configFileReader.vala
index d36d0cc..39212aa 100644
--- a/src/classes/configFileReader.vala
+++ b/src/classes/configFileReader.vala
@@ -125,10 +125,10 @@ namespace pdfpc {
 
         public void readConfig(string fname) {
             var file = File.new_for_path(fname);
-            var splitRegex = new Regex("\\s\\s*");
-            var commentRegex = new Regex("\\s*#.*$");
             uint8[] raw_datau8;
             try {
+                var splitRegex = new Regex("\\s\\s*");
+                var commentRegex = new Regex("\\s*#.*$");
                 file.load_contents(null, out raw_datau8, null);
                 string[] lines = ((string) raw_datau8).split("\n");
                 for (int i=0; i<lines.length; ++i) {
diff --git a/src/classes/timer_label.vala b/src/classes/timer_label.vala
index 7173ae5..a11f980 100644
--- a/src/classes/timer_label.vala
+++ b/src/classes/timer_label.vala
@@ -100,7 +100,7 @@ namespace pdfpc {
                 this.time = 0;
             } else if ( this.timeout == 0 ) {
                 // Start the timer if it is not running
-                this.timeout = Timeout.add( 1000, this.on_timeout );
+                this.timeout = GLib.Timeout.add( 1000, this.on_timeout );
             }
         }
 
diff --git a/src/classes/window/fullscreen.vala b/src/classes/window/fullscreen.vala
index ba0262e..c148f93 100644
--- a/src/classes/window/fullscreen.vala
+++ b/src/classes/window/fullscreen.vala
@@ -164,7 +164,7 @@ namespace pdfpc.Window {
                 Source.remove( this.hide_cursor_timeout );
             }
 
-            this.hide_cursor_timeout = Timeout.add_seconds(
+            this.hide_cursor_timeout = GLib.Timeout.add_seconds(
                 5,
                 this.on_hide_cursor_timeout
             );
-- 
1.9.3


From 35e2cfed5a16fe757718737863684e598fba90f2 Mon Sep 17 00:00:00 2001
From: Andreas Bilke <abilke@cosy.sbg.ac.at>
Date: Fri, 24 Jan 2014 13:39:09 +0100
Subject: [PATCH 2/2] changed deprecated Gee.Map.contains to Gee.Map.has_key

---
 src/classes/presentation_controller.vala | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/classes/presentation_controller.vala b/src/classes/presentation_controller.vala
index ddb4be8..1e761bb 100644
--- a/src/classes/presentation_controller.vala
+++ b/src/classes/presentation_controller.vala
@@ -274,7 +274,7 @@ namespace pdfpc {
          * Bind the (user-defined) keys
          */
         public void bind(uint keycode, uint modMask, string function) {
-            if (this.actionNames.contains(function)) {
+            if (this.actionNames.has_key(function)) {
                 this.keyBindings.set(new KeyDef(keycode, modMask), this.actionNames[function]);
             } else
                 stderr.printf("Warning: Unknown function %s\n", function);
@@ -298,7 +298,7 @@ namespace pdfpc {
          * Bind the (user-defined) keys
          */
         public void bindMouse(uint button, uint modMask, string function) {
-            if (this.actionNames.contains(function)) {
+            if (this.actionNames.has_key(function)) {
                 this.mouseBindings.set(new KeyDef(button, modMask), this.actionNames[function]);
             } else
                 stderr.printf("Warning: Unknown function %s\n", function);
-- 
1.9.3

